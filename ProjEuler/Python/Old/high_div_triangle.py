"""
The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred
divisors?
"""


nat_num = 21
increm = 7

while True:
    # after each successful divide, no new divisors larger than the quotient
    # can look for more than 498 divisors and drop the 1 and self divisors
    products = set()
    quotient = nat_num
    i = 2
    # check if the most recent quotient if bigger than the current divisor
    while i < quotient:
        if nat_num%i==0:
            products.add(i)
            quotient = nat_num//i
            products.add(quotient)
        i+=1
        
        
    nat_num = nat_num + increm
    increm += 1
    
    if len(products) > 498:
        print(nat_num-(increm-1))
        break
